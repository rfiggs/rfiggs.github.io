---
layout: essay
type: essay
title: Coding Style
date: 2016-21-30
labels:
  - Software Engineering
  - Learning
  - JavaScript
---

Programming is a long, complicated process that can involve thousands of lines of code.
For large projects you need teams of programmers.
And any time someone new is added to the programming team, they must go through the source code and figure out what is going on.
How long this takes depends on how well the code is organized.
If the code is messy, it can take much longer for a new programmer to figure out what is actually going on.
To aliviate this, programmong teams have started to adopt various coding standards.

A coding standard is nothing more than a list of syntax rules.
Generally, these standards don't take away any functionality from the language you are using.
They exist solely to make the code more pleasing to the eye.
To implement a coding standard into your code, all you have to do is format your code according to the rules.
However, that can get tedious and boring, espically on large projects with many files.
Luckily for us, there are automated tools designed to help us with this issue.


Eslint is a tool designed help programmers enforce coding standards in javascript.
Eslint does not force you to follow an arbitrary coding standard.
You can either define your own coding standard, or if someone else already has one you like, you can use theirs.
Eslint works both as a command line tool and as an IntelliJ plugin.
When used as a plugin for IntelliJ, Eslint will check your code for format errors as you write it.
Any infractions of the coding standared will be marked with a red line uder them, much like when you spell a word incorectly in microsoft word.
This allows the programmer to see infractions more clearly, and more quickly.

Coding standards and specifcally eslint are very good for begining programmers.
coding standards remove a lot of the small simple mistakes that programmers make.
Eslint enforces a coding standards, and when usuing intellij the errors apear inline.
This appeals to newer programmers as they can see the error right in the code.
Whereas with out eslint the programmer would have to run the code, then get an error message, then figure out what it means.


Before turning in an assignment, I proof read my code, and make sure that it is up to the required standard.
Eslint has made this process obsselete.
Since ESlint is always reading the document, if you make a mistake, Eslint will notify you of the infraction.
This gives the programmer a chance to immeditaly rectfiy the problem.
This removes the necsessity to proof read code, for syntax errors, before turning it in.
This ultimately makes the programmer more efficient.
